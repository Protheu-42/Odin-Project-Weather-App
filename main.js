(()=>{"use strict";var e={208:(e,n,t)=>{t.d(n,{A:()=>w});var r=t(354),a=t.n(r),o=t(314),i=t.n(o),c=t(417),s=t.n(c),d=new URL(t(760),t.b),p=new URL(t(197),t.b),l=new URL(t(804),t.b),u=new URL(t(182),t.b),A=new URL(t(326),t.b),f=new URL(t(616),t.b),m=new URL(t(268),t.b),g=i()(a());g.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap);"]);var h=s()(d),b=s()(p),E=s()(l),C=s()(u),y=s()(A),v=s()(f),x=s()(m);g.push([e.id,`:root {\n  padding: 0;\n  margin: 0;\n}\n\nbody {\n  height: 100vh;\n  display: grid;\n  font-family: "Roboto", sans-serif;\n  background-color: #6ac6f9;\n}\n\n.cloudy {\n  background: url(${h}) 100% no-repeat;\n}\n\n.rainy {\n  background: url(${b}) 100% no-repeat;\n}\n\n.snowy {\n  background: url(${E}) 100% no-repeat;\n}\n\n.foggy {\n  background: url(${C}) 100% no-repeat;\n}\n\n.windy {\n  background: url(${y}) 100% no-repeat;\n}\n\n.clear {\n  background: url(${v}) 100% no-repeat;\n}\n\n.clearNight {\n  background: url(${x}) 100% no-repeat;\n}\n\n.content {\n  justify-self: center;\n  display: grid;\n  width: 40%;\n  grid-template-rows: repeat(3, min-content);\n}\n\n.content > div {\n  padding: 35px;\n}\n\n.forecast {\n  background-color: lightblue;\n  border-radius: 5px;\n  color: white;\n  font-weight: bolder;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\n.forecast > :first-child {\n  grid-row: span 3;\n  font-size: 3rem;\n}\n\n.search {\n  justify-self: center;\n  background-color: lightblue;\n  padding: 35px;\n  margin-top: 15px;\n  border-radius: 5px;\n}\n\n.search form {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\nform > input {\n  padding: 5px;\n  border: 1px solid black;\n  width: 300px;\n  border-radius: 5px;\n}\n\n.search input:hover {\n  background-color: lightgray;\n}\n\n.search button {\n  border: 1px solid black;\n  border-radius: 7px;\n  padding: 5px 25px;\n  margin-left: 10px;\n}\n\n.search button:hover {\n  background-color: lightgray;\n}\n`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;EACE,UAAU;EACV,SAAS;AACX;;AAEA;EACE,aAAa;EACb,aAAa;EACb,iCAAiC;EACjC,yBAAyB;AAC3B;;AAEA;EACE,kEAAmD;AACrD;;AAEA;EACE,kEAAmD;AACrD;;AAEA;EACE,kEAAkD;AACpD;;AAEA;EACE,kEAAkD;AACpD;;AAEA;EACE,kEAAmD;AACrD;;AAEA;EACE,kEAAsD;AACxD;;AAEA;EACE,kEAAwD;AAC1D;;AAEA;EACE,oBAAoB;EACpB,aAAa;EACb,UAAU;EACV,0CAA0C;AAC5C;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,2BAA2B;EAC3B,kBAAkB;EAClB,YAAY;EACZ,mBAAmB;EACnB,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,oBAAoB;EACpB,2BAA2B;EAC3B,aAAa;EACb,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,YAAY;EACZ,uBAAuB;EACvB,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,uBAAuB;EACvB,kBAAkB;EAClB,iBAAiB;EACjB,iBAAiB;AACnB;;AAEA;EACE,2BAA2B;AAC7B",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap");\n\n:root {\n  padding: 0;\n  margin: 0;\n}\n\nbody {\n  height: 100vh;\n  display: grid;\n  font-family: "Roboto", sans-serif;\n  background-color: #6ac6f9;\n}\n\n.cloudy {\n  background: url("./imgs/cloudy.jpg") 100% no-repeat;\n}\n\n.rainy {\n  background: url("./imgs/rainny.jpg") 100% no-repeat;\n}\n\n.snowy {\n  background: url("./imgs/snowy.jpg") 100% no-repeat;\n}\n\n.foggy {\n  background: url("./imgs/foggy.jpg") 100% no-repeat;\n}\n\n.windy {\n  background: url("./imgs/windy.webp") 100% no-repeat;\n}\n\n.clear {\n  background: url("./imgs/clearDay.webp") 100% no-repeat;\n}\n\n.clearNight {\n  background: url("./imgs/clearNight.webp") 100% no-repeat;\n}\n\n.content {\n  justify-self: center;\n  display: grid;\n  width: 40%;\n  grid-template-rows: repeat(3, min-content);\n}\n\n.content > div {\n  padding: 35px;\n}\n\n.forecast {\n  background-color: lightblue;\n  border-radius: 5px;\n  color: white;\n  font-weight: bolder;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\n.forecast > :first-child {\n  grid-row: span 3;\n  font-size: 3rem;\n}\n\n.search {\n  justify-self: center;\n  background-color: lightblue;\n  padding: 35px;\n  margin-top: 15px;\n  border-radius: 5px;\n}\n\n.search form {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\nform > input {\n  padding: 5px;\n  border: 1px solid black;\n  width: 300px;\n  border-radius: 5px;\n}\n\n.search input:hover {\n  background-color: lightgray;\n}\n\n.search button {\n  border: 1px solid black;\n  border-radius: 7px;\n  padding: 5px 25px;\n  margin-left: 10px;\n}\n\n.search button:hover {\n  background-color: lightgray;\n}\n'],sourceRoot:""}]);const w=g},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<e.length;d++){var p=[].concat(e[d]);r&&i[p[0]]||(void 0!==o&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=o),t&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=t):p[2]=t),a&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=a):p[4]="".concat(a)),n.push(p))}},n}},417:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[n].concat([o]).join("\n")}return[n].join("\n")}},72:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},i=[],c=0;c<e.length;c++){var s=e[c],d=r.base?s[0]+r.base:s[0],p=o[d]||0,l="".concat(d," ").concat(p);o[d]=p+1;var u=t(l),A={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)n[u].references++,n[u].updater(A);else{var f=a(A,r);r.byIndex=c,n.splice(c,0,{identifier:l,updater:f,references:1})}i.push(l)}return i}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var c=t(o[i]);n[c].references--}for(var s=r(e,a),d=0;d<o.length;d++){var p=t(o[d]);0===n[p].references&&(n[p].updater(),n.splice(p,1))}o=s}}},659:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},616:(e,n,t)=>{e.exports=t.p+"f5dca11a0f2f34ab68f4.webp"},268:(e,n,t)=>{e.exports=t.p+"36a4a2d72a82dc943959.webp"},760:(e,n,t)=>{e.exports=t.p+"52aa431b66f8da9ecdd4.jpg"},182:(e,n,t)=>{e.exports=t.p+"452333048cd2d7dd93f6.jpg"},197:(e,n,t)=>{e.exports=t.p+"1f93e95a6b2c3d0b5346.jpg"},804:(e,n,t)=>{e.exports=t.p+"557ce3702430fd9775d0.jpg"},326:(e,n,t)=>{e.exports=t.p+"b6eea4afae5e0ef7d052.webp"}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");if(r.length)for(var a=r.length-1;a>-1&&(!e||!/^http(s?):/.test(e));)e=r[a--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0;var r=t(72),a=t.n(r),o=t(825),i=t.n(o),c=t(659),s=t.n(c),d=t(56),p=t.n(d),l=t(540),u=t.n(l),A=t(113),f=t.n(A),m=t(208),g={};g.styleTagTransform=f(),g.setAttributes=p(),g.insert=s().bind(null,"head"),g.domAPI=i(),g.insertStyleElement=u(),a()(m.A,g),m.A&&m.A.locals&&m.A.locals;const h=document.querySelector(".content"),b=document.querySelector("body"),E=document.createElement("div");E.classList.add("forecast");let C=document.createElement("div");C.textContent="00°";let y=document.createElement("div");y.textContent="Address";let v=document.createElement("div");v.textContent="Temperature MAX";let x=document.createElement("div");x.textContent="Temperature MIN";const w=document.createElement("div");w.classList.add("search");const B=document.createElement("form"),k=document.createElement("input");k.setAttribute("type","text"),k.setAttribute("placeholder","Type your city");const j=document.createElement("button");j.setAttribute("type","button"),j.textContent="Search";const M=document.createElement("div"),N=document.createElement("input");N.setAttribute("type","radio"),N.setAttribute("name","unitGroup"),N.setAttribute("id","celcius"),N.setAttribute("value","celcius"),N.checked=!0;const S=document.createElement("label");S.setAttribute("for","celcius"),S.textContent="Celcius (C°)";const T=document.createElement("br"),R=document.createElement("div"),D=document.createElement("input");D.setAttribute("type","radio"),D.setAttribute("name","unitGroup"),D.setAttribute("id","celcius"),D.setAttribute("value","celcius");const U=document.createElement("label");U.setAttribute("for","fahrenheit"),U.textContent="Fahrenheit (F°)",function(e){for(;h.firstChild;)h.removeChild.firstChild;h.appendChild(E),E.appendChild(C),E.appendChild(y),E.appendChild(v),E.appendChild(x),h.appendChild(w),w.appendChild(B),B.appendChild(k),B.appendChild(j),B.appendChild(M),M.appendChild(N),M.appendChild(S),B.appendChild(T),B.appendChild(R),R.appendChild(D),R.appendChild(U),function(e){j.addEventListener("click",(async()=>{let n="";n=N.checked?"celcius":"fahrenheit",await async function(e,n,t){""===n&&(n="London");try{const r=await e(t,n);switch(y.textContent=r.address,C.textContent=`${r.temperature}°`,v.textContent=`Max ${r.tempMax}°`,x.textContent=`Min ${r.tempMin}°`,r.icon){case"snow":b.className="snowy";break;case"rain":b.className="rainy";break;case"fog":b.className="foggy";break;case"wind":b.className="windy";break;case"cloudy":b.className="cloudy";break;case"clear-day":b.className="clear";break;case"clear-night":b.className="clearNight"}}catch(e){console.log(e)}}(e,k.value,n)}))}((async function(e="celcius",n){let t="";"celcius"===e?t="metric":"fahrenheit"===e&&(t="us");const r=await fetch(`https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${n}/today?unitGroup=${t}&key=HHMYQ7NPYJHMY9VP4ET9S5T69&contentType=json`,{method:"GET",headers:{}}),a=await r.json(),o=a.resolvedAddress,i=a.days[0],c=i.temp;return{address:o,tempMax:i.tempmax,tempMin:i.tempmin,temperature:c,icon:i.icon}}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,